<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://xie-fangyuan.gihub.io/</id><title>XIÈ Fāng-yuán</title><subtitle>A minimal, portfolio, sidebar, bootstrap Jekyll theme with responsive web design and focuses on text presentation.</subtitle> <updated>2023-08-14T11:11:42+08:00</updated> <author> <name>XIÈ Fāng-yuán</name> <uri>https://xie-fangyuan.gihub.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://xie-fangyuan.gihub.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://xie-fangyuan.gihub.io/"/> <generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator> <rights> © 2023 XIÈ Fāng-yuán </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>LaTeX</title><link href="https://xie-fangyuan.gihub.io/posts/latex/" rel="alternate" type="text/html" title="LaTeX" /><published>2022-07-03T16:31:13+08:00</published> <updated>2022-07-03T16:31:13+08:00</updated> <id>https://xie-fangyuan.gihub.io/posts/latex/</id> <content src="https://xie-fangyuan.gihub.io/posts/latex/" /> <author> <name>XIÈ Fāng-yuán</name> </author> <category term="工具" /> <summary> 配置环境 安装MiKTeX 从MiKTeX官网下载MiKTeX 打开MiKTeX，检查更新，为个人安装宏包 不要使用为系统安装，因为每次打开MiKTeX都是默认以个人的方式打开，同时可以避免无法下载一些宏包的问题。 将MiKTeX -&amp;gt; 设置 -&amp;gt; 常规 -&amp;gt; 宏包安装 -&amp;gt; 自动（即时）安装缺失的宏包设置为总是 将~/bin添加到终端的环境变量PATH中，运行echo export 'PATH=~/bin:$PATH' &amp;gt;&amp;gt; ~/.zshrc 个人目录下的.zshrc是zsh的配置文件。如果使用bash，bash的配置文件是~/.bash_profile 将~/bin添加到图形界面应用的环境变量PATH中，运行sudo launchctl config user path "$HOME/bin:$PATH" 配置... </summary> </entry> <entry><title>打包和发布Python包到PyPI</title><link href="https://xie-fangyuan.gihub.io/posts/PyPI/" rel="alternate" type="text/html" title="打包和发布Python包到PyPI" /><published>2022-06-01T23:30:57+08:00</published> <updated>2022-06-04T23:55:04+08:00</updated> <id>https://xie-fangyuan.gihub.io/posts/PyPI/</id> <content src="https://xie-fangyuan.gihub.io/posts/PyPI/" /> <author> <name>XIÈ Fāng-yuán</name> </author> <category term="工具" /> <summary> 目录结构 project-name ├── LICENSE.txt ├── README.md ├── pyproject.toml ├── setup.py ├── src │   └── package-name │      ├── __init__.py │      ├── file1.py │      ├── package1 │      │   └── ... │      └── ... └── tests ├── __init__.py ├── test_file1.py ├── test_package1    │   └── ... └── ... project-name和package-name不需要相同，打包发布使用的是package-name，tests文件夹用于测试，不会被打包发布。 pyproj... </summary> </entry> <entry><title>使用Chirpy主题在GitHub搭建个人主页</title><link href="https://xie-fangyuan.gihub.io/posts/chirpy/" rel="alternate" type="text/html" title="使用Chirpy主题在GitHub搭建个人主页" /><published>2022-01-27T23:20:12+08:00</published> <updated>2023-01-05T23:30:49+08:00</updated> <id>https://xie-fangyuan.gihub.io/posts/chirpy/</id> <content src="https://xie-fangyuan.gihub.io/posts/chirpy/" /> <author> <name>XIÈ Fāng-yuán</name> </author> <category term="工具" /> <summary> 配置Ruby环境 安装XCode时会附带安装Command Line Tools；如果没有安装XCode，单独安装Command Line Tools： xcode-select --install 设置SDKROOT，否则会安装Jekyll失败，该变量只作用于当前终端窗口： export SDKROOT=$(xcrun --show-sdk-path) 安装Ruby版本管理工具rbenv： brew install rbenv 启动rbenv： rbenv init 根据提示，为了在每次启动终端窗口时自动加载rbenv，可以在~/.zshrc中添加eval "$(rbenv init - zsh)"： echo '\n# ruby\neval "$(rbenv init - zsh)"' &amp;gt;&amp;gt; ~/.zshrc 安装Ruby（2.5.0 ... </summary> </entry> <entry><title>nano编辑器</title><link href="https://xie-fangyuan.gihub.io/posts/nano/" rel="alternate" type="text/html" title="nano编辑器" /><published>2022-01-26T19:16:51+08:00</published> <updated>2022-09-05T08:58:30+08:00</updated> <id>https://xie-fangyuan.gihub.io/posts/nano/</id> <content src="https://xie-fangyuan.gihub.io/posts/nano/" /> <author> <name>XIÈ Fāng-yuán</name> </author> <category term="工具" /> <summary> 安装nano zsh自带了nano，但是版本较低，在mac自带的终端安装最新版nano，不要使用iTerm2。 从nano官网复制最新版下载链接，下载nano： cd ~/Downloads wget https://www.nano-editor.org/dist/v6/nano-6.0.tar.gz 解压： tar -xzvf nano-6.0.tar.gz 编译安装： cd nano-6.0 ./configure sudo make sudo make install 删除安装包： cd .. rm nano-6.0.tar.gz rm -r nano-6.0 查看nano版本是否是最新版： nano -V 新建~/.nanorc文件，写入以下内容： # highlight syntax include "/usr/local/share/... </summary> </entry> <entry><title>zsh实用命令</title><link href="https://xie-fangyuan.gihub.io/posts/zsh/" rel="alternate" type="text/html" title="zsh实用命令" /><published>2021-12-11T00:04:09+08:00</published> <updated>2022-03-29T22:09:54+08:00</updated> <id>https://xie-fangyuan.gihub.io/posts/zsh/</id> <content src="https://xie-fangyuan.gihub.io/posts/zsh/" /> <author> <name>XIÈ Fāng-yuán</name> </author> <category term="工具" /> <summary> 文件系统 关于目录 /表示根目录，~表示个人用户目录，.表示当前工作目录，..表示上一级目录，zsh中...表示上一级目录的上一级目录，以此类推。 pwd print working directory，查看工作目录的绝对路径： 在个人目录下查看工作目录的绝对路径：pwd，输出：/Users/userName ls list directory contents，查看一个目录下的文件和文件夹： 查看工作目录下所有显式文件和文件夹的名称：ls 查看工作目录下的java/目录下的所有文件和文件夹的名称（包括隐藏文件）：ls -a java 查看工作目录下所有文件和文件夹的详细信息（包括隐藏文件，长格式）：l或ls -al或ls -a -l或ls -l -a cd change directory，改变工作目录： 改变工作目录为python/目录... </summary> </entry> </feed>
